--[[
    GrabCutスクリプト
    最終的にロトブラシみたいに...
]]


@入力画像
imgUd, imgW, imgH = obj.getpixeldata("alloc")


@マスク画像
maskUd, maskW, maskH = obj.getpixeldata("alloc")



@実行
--track0:処理数,1,5,1,1
--track1:確認,0,2,1,1
--track2:縁太さ,0,500,0,1
--track3:縁ぼかし,0,100,0,1
--check0:実行, 0
--dialog:輪郭色/col,_1=0xff00ff;前景色/col,_2=0x00ff00;後景色/col,_3=0xff00ff;

------------------------------------
-- GUI --
------------------------------------
local slider0 = obj.track0
local slider1 = obj.track1
local slider2 = obj.track2
local slider3 = obj.track3

local switch0 = obj.check0

local colT    = _1
local colF    = _2
local colB    = _3

------------------------------------
-- 例外処理 --
------------------------------------
tonumber(nil)
if (colT==nil or colT=="" or colT == 1) then 
    colT = 0xff00ff
end

if (colF==nil or colF=="") then 
    colF = 0x00ff00
end

if (colB==nil or colB=="") then 
    colB = 0xff00ff
end

colT = (colT == 0xffffff) and 0xfffffe or colT
local Fred, Fgreen, Fblue = RGB(colF)
local Bred, Bgreen, Bblue = RGB(colB)


-- 保存出来るuserdataは一つのみ -> workと無指定はテンポラリー領域に置くため消えてしまう
if imgW == nil or maskH == nil then
    switch0 = nil
    return
end

if (imgW ~= maskW) or (imgH ~= maskH) then
    switch0 = nil
    return
end

if imgW == 0 or imgH == 0 then
    switch0 = nil
    return
end


------------------------------------
-- 確認
------------------------------------
obj.setoption("drawtarget","tempbuffer", imgW, imgH)
obj.load("figure", "四角形", colT, 1)
obj.drawpoly(-imgW/2, -imgH/2, 0,  imgW/2, -imgH/2, 0,  imgW/2, imgH/2, 0,  -imgW/2, imgH/2, 0)
obj.copybuffer("obj", "tmp")
-- obj.load("tempbuffer")

if slider1 == 1 then
    obj.putpixeldata(imgUd)
    return

elseif slider1 == 2 then
    obj.putpixeldata(maskUd)
    return
else
    obj.putpixeldata(imgUd)
end

------------------------------------
-- 外部モジュール --
------------------------------------
local LazySnap = require"LazySnap"
local udata = imgUd

if switch0 then
    LazySnap.grabcut(imgUd, maskUd, imgW, imgH, slider2, slider0, Fred, Fgreen, Fblue, Bred, Bgreen, Bblue)
    obj.putpixeldata(imgUd)
end

------------------------------------
-- 輪郭切り抜き --
------------------------------------
if slider2 ~= 0 then
    obj.effect("縁取り", "サイズ", slider2, "ぼかし", slider3 , "color", colT)
    obj.effect("ルミナンスキー", "基準輝度", 4095, "ぼかし", 0 , "type", 1)
end

------------------------------------
-- メモリ解放 --
------------------------------------
_1 = nil
_2 = nil
_3 = nil

slider0 = nil
slider1 = nil
slider2 = nil
slider3 = nil
switch0 = nil

colT = nil
colF = nil
colB = nil

Fred, Fgreen, Fblue = nil, nil, nil
Bred, Bgreen, Bblue = nil, nil, nil

lazy_cut = nil
collectgarbage("collect")