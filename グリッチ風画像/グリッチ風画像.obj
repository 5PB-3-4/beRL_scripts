--track0:先頭位置,0,1000,60,1
--track1:図形長さ,0,1000,40,1
--track2:ﾘｻｲｽﾞ:X,0,10000,1000,0.01
--track3:ﾘｻｲｽﾞ:Y,0,10000,1000,0.01

--dialog:領域幅,_1=60;領域高さ,_2=40;色/col,_3=0x0ff0f9;透明度,_4=255;先頭係数,_5=2;長さ係数,_6=3;

-----------------------------------------------------------
-- GUI --
-----------------------------------------------------------
local slider0 = obj.track0
local slider1 = obj.track1
local slider2 = obj.track2
local slider3 = obj.track3

local w, h =_1, _2
local mono_col = _3
local alpha = math.fmod(math.abs(_4),256)
local opt_s, opt_g = _5, _6

_1 = nil
_2 = nil
_3 = nil
_4 = nil
_5 = nil
_6 = nil

-----------------------------------------------------------
-- 領域展開 --
-----------------------------------------------------------
obj.setoption("dst","tmp",w,h)
obj.copybuffer("obj","tmp")

-----------------------------------------------------------
-- 描画 --
-----------------------------------------------------------
local ffi=require"ffi"
local ud = obj.getpixeldata()
local cd = ffi.cast("uint8_t*",ud)
local size=w*h

-- 範囲と開始位置は0 ~ 4の間で大体の形が描画できるみたい (int型が4byte指定だから？)
ffi.fill(cd + opt_s*size*slider0/250, 
        opt_g*size*slider1/250,
        alpha
)

obj.putpixeldata(ud)

-----------------------------------------------------------
-- 化粧 --
-----------------------------------------------------------
obj.effect("リサイズ","X",slider2,"Y",slider3,"補間なし",1)
obj.effect("単色化","強さ",100,"輝度を保持する",0,"color",mono_col)

-----------------------------------------------------------
-- メモリ解放 --
-----------------------------------------------------------
slider0	= nil
slider1	= nil
slider2	= nil
slider3	= nil

w, h = nil, nil
mono_col = nil
alpha = nil
opt_s, opt_g = nil, nil

ffi = nil
ud = nil
cd = nil
size = nil

collectgarbage("collect")

