rikky_bufferスクリプト ver[1.0]

▼このスクリプトは何？
rikky_moduleを用いて画像を一時保存できるようにしました。基本的な使い方はゆうきさんの一時保存EXTと同じです。

▼導入方法
aviutlのscriptフォルダに@rikky_buffer.objと@rikky_buffer.anmを、aviutl.exeがあるフォルダにrikky_buffer.luaを置いてください。なおrikky_moduleが無いと動きませんのでそちらのプラグインも導入してください。

▼機能のご紹介
画像やフレームバッファをrikky_moduleの方に保存、読み込むことができます。このスクリプトを使うことでフレームバッファをオブジェクトとして扱う、処理が重いところを一時回避する等の使い方ができると思います。


■パラメータの設定

・画像データの保存
トラックバー
0	id		：保存したい画像データの保存先のidとなります

チェックボックス
0	フレームバッファ参照	：フレームバッファをオブジェクトデータにコピーします

設定ダイアログ
_1	仮想バッファ参照	：オブジェクトデータを仮想バッファにコピーします
_2	アルファ値参照      	：画像データの透明度も保存します(.anmのみ)
_0	injection		：{"string_value"} ダイアログボックスに"文字列"を入れるとメモリのidが文字列になります

----------------------------------------------------------------------------------------------------------------------
・画像データの読み込み
トラックバー
0	id		：読み込む画像データのidとなります

チェックボックス
0	座標値等を引継ぐ：保存したオブジェクトのobj.ox等の値を保持します(.anmのみ)

設定ダイアログ
_0	injection	：{"string_value"} ダイアログボックスに"文字列"を入れるとメモリのidが文字列になります。

----------------------------------------------------------------------------------------------------------------------
・画像データの消去
トラックバー
0	id		：消去する画像データのidとなります

チェックボックス
0	全消し		：書き込んだ画像データを全て消去します

設定ダイアログ
_0	injection	：{"string_value"} ダイアログボックスに"文字列"を入れるとメモリのidが文字列になります。

----------------------------------------------------------------------------------------------------------------------
・画像データの複製
トラックバー
0	dst_id		：複製先の画像データのidとなります
1	src_id		：複製元の画像データのidとなります

チェックボックス
0	上書き		：複製先に画像データが存在する場合、画像データを上書きします

設定ダイアログ
_0	injection	：{"string_value","string_value"} ダイアログボックスに"文字列"を入れるとメモリのidが文字列になります。



▼注意点
・「マップ指定」のチェック有効時のみ、各自で「指定マップ」で設定したテーブルを閾値マップとすることが出来ます。
・マップ表示は重いので確認する時以外はオフにしておくと良いです。
・ver1_0はver1.0の再現モードです。利用にはマップ指定のチェックをオフにしておいてください。

▼バグ
ver1.0 ('22/8/10)
なぜかrikky_module.image("c+")が動かなかったため、for文を使って代用している。そのため若干動作が重いかも。

▼バグ報告等の連絡先はこちら
Twitter : @blue_beRL
